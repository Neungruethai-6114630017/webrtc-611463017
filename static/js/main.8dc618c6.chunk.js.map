{"version":3,"sources":["App.js","reportWebVitals.js","index.js","../node_modules/peerjs/dist sync"],"names":["peer","Peer","conn","connect","App","useState","myID","setMyID","friendID","setFriendID","mystream","setsMytream","stateConnect","setStateConnect","stateButton","setSateButton","txtMessage","setTxtMessage","messages","setMessages","files","setFiles","fileList","setFileList","stateTooltip","setStateTooltip","stateCopy","setStateCopy","stateDisConnect","setSateDisConnect","stateCollapseChat","setStateCollapseChat","stateCollapseFile","setStateCollapseFile","myVideo","useRef","friendVideo","document","title","useEffect","navigator","mediaDevices","getUserMedia","video","audio","then","stream","current","srcObject","on","id","connection","data","type","onReceivedMessage","onReceivedFile","call","answer","catch","err","console","error","MyVideo","FriendVideo","message","owner","blob","Blob","file","filetype","url","URL","createObjectURL","addFile","filename","size","name","playsInline","muted","ref","autoPlay","style","maxWidth","togleStateDisConnect","sendMessage","send","className","md","theme","onMouseLeave","onClick","destroy","window","location","reload","cursor","marginBottom","padding","color","onMouseEnter","clipboard","writeText","open","toggle","target","placeholder","value","onChange","e","length","handleChange","htmlFor","pill","alert","disabled","marginTop","class","display","justifyContent","map","index","outline","onKeyDown","key","href","download","prettyBytes","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById","webpackEmptyContext","req","Error","code","keys","resolve","module","exports"],"mappings":"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","file":"static/js/main.8dc618c6.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport Peer from 'peerjs';\nimport prettyBytes from 'pretty-bytes'\nimport {\n  Container,\n  Row,\n  Col,\n  Alert,\n  Card,\n  CardBody,\n  Button,\n  Badge,\n  Tooltip,\n  CardHeader,\n  FormInput,\n  Collapse,\n  CardFooter,\n} from \"shards-react\";\n\nvar peer = new Peer();\nvar conn = peer.connect()\n\nconst App = () => {\n\n  const [myID, setMyID] = useState('')\n  const [friendID, setFriendID] = useState('')\n  const [mystream, setsMytream] = useState()\n\n  const [stateConnect, setStateConnect] = useState(false)\n  const [stateButton, setSateButton] = useState(false)\n\n  const [txtMessage, setTxtMessage] = useState()\n  const [messages, setMessages] = useState([])\n  const [files, setFiles] = useState()\n  const [fileList, setFileList] = useState([])\n\n\n  let [stateTooltip, setStateTooltip] = useState(false)\n  let [stateCopy, setStateCopy] = useState(false)\n  let [stateDisConnect, setSateDisConnect] = useState(false)\n  let [stateCollapseChat, setStateCollapseChat] = useState(false)\n  let [stateCollapseFile, setStateCollapseFile] = useState(false)\n\n  const myVideo = useRef();\n  const friendVideo = useRef();\n\n  // Set Title\n  document.title = myID\n\n  useEffect(() => {\n\n    navigator.mediaDevices.getUserMedia({ video: true, audio: true }).then(stream => {\n      setsMytream(stream);\n      if (myVideo.current) {\n        myVideo.current.srcObject = stream;\n      }\n    })\n\n    peer.on('open', id => {//Start Peers\n      setMyID(id);\n    });\n\n    peer.on('connection', connection => {//New Connection\n      setStateConnect(true)\n      conn = connection\n      // Receive Data\n      connection.on('data', data => {\n        // setFriendID(data)\n        if (data.type == \"id\")\n          setFriendID(data.id)\n        else if (data.type == \"message\")\n          onReceivedMessage(data)\n        else if (data.type == \"file\")\n          onReceivedFile(data)\n      })\n\n    });\n\n    peer.on(\"disconnect\", () => {\n      setStateConnect(false)\n    });\n\n    // Answer\n    peer.on('call', call => {\n      navigator.mediaDevices.getUserMedia({ video: true, audio: true })\n        .then((stream) => {\n          call.answer(stream)\n          call.on('stream', stream => {\n            friendVideo.current.srcObject = stream\n          })\n        })\n        .catch((err) => {\n          console.error('Failed to get local stream', err);\n        });\n    })\n\n  }, [setMessages]);\n\n\n  const startConnection = () => {\n    conn = peer.connect(friendID);\n    setStateConnect(true)\n\n    // Send Friend ID\n    conn.on('open', () => {\n      conn.send({ type: \"id\", id: friendID })\n    })\n\n    conn.on('data', data => {\n      if (data.type == \"message\")\n        onReceivedMessage(data)\n      else if (data.type == \"file\")\n        onReceivedFile(data)\n    })\n\n    peer.on('error', err => {\n      if (err.type === 'peer-unavailable')\n        alert(\"The id or peer you're trying to connect to does not exist.\")\n    })\n\n    // Call\n    let call = peer.call(friendID, mystream)\n    call.on('stream', stream => {\n      friendVideo.current.srcObject = stream\n    })\n\n  }\n\n  const onReceivedMessage = (data) => {\n    setMessages(messages => [...messages, { message: data.message, owner: false }])\n  }\n\n  const onReceivedFile = (data) => {\n    const blob = new Blob([data.file], { type: data.filetype })\n    const url = URL.createObjectURL(blob)\n\n    addFile({ 'name': data.filename, 'url': url, size: data.size })\n  }\n\n  const addFile = (file) => {\n    const data = { name: file.name, url: file.url, size: file.size }\n    setFileList(fileList => [...fileList, data])\n  }\n\n  // DisConnect Peer and Refresh Page\n  const DisConnect = () => {\n    peer.destroy()\n    window.location.reload(false)\n  }\n\n  // My Video Conponent\n  let MyVideo;\n  if (mystream) {\n    MyVideo = (\n      <video playsInline muted ref={myVideo} autoPlay style={{ maxWidth: \"100%\" }} />\n    );\n  }\n\n  // Friend Video Conponent\n  let FriendVideo;\n  if (friendVideo) {\n    FriendVideo = (\n     <video playsInline muted ref={friendVideo} autoPlay style={{ maxWidth: \"100%\" }} />\n    );\n  }\n\n  const copyMyID = () => {\n    setStateCopy(stateCopy ? false : true)\n    navigator.clipboard.writeText(myID)\n  }\n\n  const togleStateDisConnect = () => {\n    setSateDisConnect(stateDisConnect ? false : true)\n  }\n\n  const toggleCollapseChat = () => {\n    setStateCollapseChat(stateCollapseChat ? false : true)\n  }\n\n  const toggleCollapseFile = () => {\n    setStateCollapseFile(stateCollapseFile ? false : true)\n  }\n\n  const toggleTooltip = () => {\n    setStateTooltip(stateTooltip ? false : true)\n  }\n\n  const handleChange = (e) => {\n    setFriendID(e.target.value)\n    if (e.target.value.length > 10)\n      setSateButton(true)\n    else\n      setSateButton(false)\n  }\n\n  const sendMessage = () => {\n    conn.send({ type: \"message\", message: txtMessage })\n    setMessages(messages => [...messages, { message: txtMessage, owner: true }])\n    setTxtMessage('')\n  }\n\n  const sendFile = () => {\n    const file = files[0]\n    \n    if (file.size <= 5242880) {\n      const blob = new Blob(files, { type: file.type })\n\n      conn.send({\n        type: \"file\",\n        file: blob,\n        filename: file.name,\n        filetype: file.type,\n        size: file.size\n      })\n\n    } else {\n      alert(\"The file is larger than 5 MB.\")\n    }\n  }\n\n  return (\n    <>\n    \n      <Container>\n      <Card className=\"mt-2 mb-2\">\n          <CardBody>\n            {\n              stateConnect ?\n                (\n                  <>\n                    <Row>\n                      <center><Col md=\"3\">\n\n                        {\n                          stateDisConnect ? (\n                            <Badge theme=\"danger\" onMouseLeave={togleStateDisConnect} onClick={DisConnect} style={{ cursor: \"pointer\" }}>\n                              <h4 style={{ marginBottom: \"0\", padding: \"5px\", color: \"#FFF\" }}>\n                                DisConnect\n                            </h4>\n                            </Badge>\n                          ) : (\n                            \n                              <Badge theme=\"success\" onMouseEnter={togleStateDisConnect} >\n                                <h4 style={{ marginBottom: \"0\", padding: \"5px\", color: \"#FFF\" }}>\n                                  Connected \n                            </h4>\n                              </Badge>\n                            )\n                        }\n\n\n                      </Col></center>\n                    </Row>\n                  </>\n                )\n                :\n                (\n                  <>\n                    <Row>\n                      <Row>\n                        <Col>\n                          <h4>\n\n                            <Badge className=\"mr-3\" theme=\"info\">My ID</Badge>\n                            <label style={{ cursor: \"pointer\" }} id=\"myId\" onClick={copyMyID}>\n                              {myID}\n                            </label>\n                            \n                          </h4>\n                          <Tooltip\n                            open={stateTooltip}\n                            toggle={toggleTooltip}\n                            target=\"#myId\"\n                          >\n                            {\n                              stateCopy ? (\"Copied\") : (\"Clicke to Coppy\")\n                            }\n                          </Tooltip>\n                        </Col>\n                      </Row>\n\n                      <Row>\n                        <Col md=\"10\">\n                          <div className=\"form-floating mb-3\">\n                            <input type=\"text\" className=\"form-control\" id=\"friendID\" placeholder=\"Enter Friend ID\" value={friendID} onChange={e => handleChange(e)} />\n                            <label htmlFor=\"friendID\">Enter Friend ID</label>\n                          </div>\n                        </Col>\n\n                        <Col md=\"2\">\n                          {\n                            stateButton ? (\n                              <Button size=\"lg\" pill theme=\"success\" onClick={startConnection} >Connect</Button>\n                            ) : (\n                                <Button size=\"lg\" pill theme=\"success\" disabled >Connect</Button>\n                              )\n                          }\n                        </Col>\n                      </Row>\n                    </Row>\n                    \n                  </>\n                )\n            }\n\n          </CardBody>\n        <Row className=\"mt-2\">\n          <Col md=\"6\">\n            <center><Alert style={{ marginBottom: \"0\" }}>\n            My Video | ID : {myID}\n            </Alert></center>\n            {MyVideo}\n          </Col>\n\n          <Col>\n            <center>< Alert theme=\"secondary\" style={{ marginBottom: \"0\" }}>\n            Friend Video {friendID ? (`| ID : ${friendID}`) : ('')}\n            </Alert></center>\n            {\n              stateConnect ? FriendVideo : (<h3 className=\"text-center\" style={{ marginTop: \"20%\", color: \"#ccc\" }}>No video yet</h3>)\n            }\n          </Col>\n        </Row>\n\n        {\n          stateConnect ? (\n            <>\n            <div class=\"row\">\n              <div class=\"col-sm-6\">\n                <div class=\"card\">\n                  <div class=\"card-body\">\n                  <Card>\n                \n                <CardHeader style={{ cursor: \"pointer\", display: \"flex\", justifyContent: \"space-between\" }} onClick={toggleCollapseChat}>\n                  <div>\n                  <b>Chat With Your Friend</b>\n                  </div>\n                  <div className=\"text-right\">\n               ▼\n              </div>\n                </CardHeader>\n\n                <Collapse open={stateCollapseChat}>\n                  <CardBody>\n                    <Row>\n                      {\n                        messages && messages.map((message, index) => (\n                          <Col md=\"12\" className={message.owner ? \"text-right\" : \"text-left\"}>\n                            <Button outline pill theme={message.owner ? \"Success\" : \"secondary\"} className=\"mb-1\"> {message.message} </Button>\n                          </Col>\n                        ))\n                      }\n                    </Row>\n                  </CardBody>\n                  <CardFooter>\n                    <Row>\n                      <Col md=\"9\">\n                        <FormInput  placeholder=\"Enter Message\" value={txtMessage} onKeyDown={e => { if (e.key === \"Enter\") sendMessage() }} onChange={e => setTxtMessage(e.target.value)} />\n                      </Col>\n                      <Col md=\"3\" className=\"text-right\">\n                        <Button onClick={sendMessage}>Send Message</Button>\n                      </Col>\n                    </Row>\n                  </CardFooter>\n                </Collapse>\n\n              </Card>\n\n                   </div>\n                </div>\n              </div>\n              <div class=\"col-sm-6\">\n                <div class=\"card\">\n                  <div class=\"card-body\">\n                   <Card>\n                   <CardHeader theme=\"secondary\" style={{ cursor: \"pointer\", display: \"flex\", justifyContent: \"space-between\" }} onClick={toggleCollapseFile}>\n                  <div>\n                    <b>Sharing Files</b>\n                  </div>\n                  <div>\n                    ▼\n            </div>\n\n                </CardHeader>\n\n                <Collapse open={stateCollapseFile}>\n                  <CardBody>\n                    <div>\n                      <ul class=\"list-group\">\n                        {\n                          fileList && fileList.map((file, index) => (\n                            <li\n                              class=\"list-group-item d-flex justify-content-between align-items-center\"\n                              key={index}>\n                              <a href={file.url} download={file.name} >{file.name}</a>\n                              <span class=\"badge bg-primary rounded-pill\">{prettyBytes(file.size)}</span>\n                            </li>\n                          ))\n                        }\n                      </ul>\n                    </div>\n                  </CardBody>\n                  <CardFooter>\n                    <Row>\n                      <Col md=\"9\">\n                        <FormInput type=\"file\" onChange={e => setFiles(e.target.files)} />\n                      </Col>\n                      <Col md=\"3\" className=\"text-right\">\n                        <Button onClick={sendFile}>Send File</Button>\n                      </Col>\n                    </Row>\n                  </CardFooter>\n                </Collapse>\n               \n              \n              </Card>\n                  </div>\n                </div>\n              </div>\n            </div>\n             \n            </>\n          ) : ('')\n        }\n\n\n       \n        </Card>\n      </Container>\n    </>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"shards-ui/dist/css/shards.min.css\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 72;"],"sourceRoot":""}